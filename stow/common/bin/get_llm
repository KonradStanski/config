#!/usr/bin/env python3
# command_desc
# {
#     "name": "get_llm",
#     "description": "Extract text content from all files in a directory",
#     "usage": "get_llm <directory_path> <output_file>"
# }

import os
import sys


def is_text_file(filepath, sample_size=512):
    """
    Heuristic to determine if a file is text-based by reading a sample size with UTF-8.
    """
    try:
        with open(filepath, "rb") as file:
            sample = file.read(sample_size)
            sample.decode("utf-8")
        return True
    except UnicodeDecodeError:
        return False
    except Exception:
        return False


def fetch_text_files(root_path, output_path):
    with open(output_path, "w") as output_file:
        for dirpath, _, filenames in os.walk(root_path):
            for filename in filenames:
                file_path = os.path.join(dirpath, filename)

                # Check if file appears to be a text file
                if is_text_file(file_path):
                    try:
                        with open(file_path, "r", encoding="utf-8") as file:
                            content = file.read()

                        # Write beginning separator with file path information
                        output_file.write(f"\n\n--- BEGIN FILE: {file_path} ---\n\n")
                        output_file.write(content)
                        # Write end separator
                        output_file.write(f"\n\n--- END FILE: {file_path} ---\n\n")

                    except Exception as e:
                        print(f"Could not read {file_path}: {e}", file=sys.stderr)


if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Usage: script.py <directory_path> <output_file>")
        sys.exit(1)

    directory_path = sys.argv[1]
    output_file_path = sys.argv[2]

    fetch_text_files(directory_path, output_file_path)
    print(f"All text content written to {output_file_path}")
